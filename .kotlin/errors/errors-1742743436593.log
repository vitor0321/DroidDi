kotlin version: 2.0.21
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: C:/Users/DM Tutoriais/AndroidStudioProjects/DroidDIBase/droid-inject-android/src/main/java/com/example/droidinject/ViewModelInject.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:246)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:142)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:148)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:103)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:49)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:675)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1660)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:droidInjectViewModel visibility:public modality:FINAL <VM> () returnType:VM of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel [inline]
  annotations:
    Composable
  TYPE_PARAMETER name:VM index:0 variance: superTypes:[androidx.lifecycle.ViewModel] reified:true
  BLOCK_BODY
    VAR name:$i$f$droidInjectViewModel type:kotlin.Int [val]
      CONST Int type=kotlin.Int value=0
    RETURN type=kotlin.Nothing from='public final fun droidInjectViewModel <VM> (): VM of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel [inline] declared in com.example.droidinject.ViewModelInjectKt'
      TYPE_OP type=VM of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel origin=IMPLICIT_CAST typeOperand=VM of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel
        CALL 'public final fun viewModel$default <VM> (viewModelStoreOwner: androidx.lifecycle.ViewModelStoreOwner?, key: kotlin.String?, factory: androidx.lifecycle.ViewModelProvider.Factory?, extras: androidx.lifecycle.viewmodel.CreationExtras?, $mask0: kotlin.Int, $handler: kotlin.Any?): VM of androidx.lifecycle.viewmodel.compose.ViewModelKt.viewModel$default [inline] declared in androidx.lifecycle.viewmodel.compose.ViewModelKt' type=VM of androidx.lifecycle.viewmodel.compose.ViewModelKt.viewModel$default origin=DEFAULT_DISPATCH_CALL
          <VM>: VM of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel
          viewModelStoreOwner: COMPOSITE type=androidx.lifecycle.ViewModelStoreOwner? origin=DEFAULT_VALUE
            CONST Null type=androidx.lifecycle.ViewModelStoreOwner? value=null
          key: COMPOSITE type=kotlin.String? origin=DEFAULT_VALUE
            CONST Null type=kotlin.String? value=null
          factory: BLOCK type=com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided><VM of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel> origin=OBJECT_LITERAL
            CLASS CLASS name:<no name provided> modality:FINAL visibility:local superTypes:[androidx.lifecycle.ViewModelProvider.Factory]
              $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided><VM of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel>
              CONSTRUCTOR visibility:public <> () returnType:com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided><VM of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel> [primary]
                BLOCK_BODY
                  DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
                  BLOCK type=kotlin.Unit origin=null
              FUN name:create visibility:public modality:OPEN <T> ($this:com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided><VM of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel>, modelClass:java.lang.Class<T of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create>) returnType:T of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create
                overridden:
                  public open fun create <T> (modelClass: java.lang.Class<T of androidx.lifecycle.ViewModelProvider.Factory.create>): T of androidx.lifecycle.ViewModelProvider.Factory.create declared in androidx.lifecycle.ViewModelProvider.Factory
                TYPE_PARAMETER name:T index:0 variance: superTypes:[androidx.lifecycle.ViewModel] reified:false
                $this: VALUE_PARAMETER name:<this> type:com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided><VM of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel>
                VALUE_PARAMETER name:modelClass index:0 type:java.lang.Class<T of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create>
                BLOCK_BODY
                  VAR name:kClass type:kotlin.reflect.KClass<VM of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel> [val]
                    CLASS_REFERENCE 'TYPE_PARAMETER name:VM index:0 variance: superTypes:[androidx.lifecycle.ViewModel] reified:true' type=kotlin.reflect.KClass<VM of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel>
                  VAR name:viewModelInstance type:kotlin.Any [val]
                    CALL 'public final fun resolve <T> (clazz: kotlin.reflect.KClass<T of com.example.droid_inject.Container.resolve>): T of com.example.droid_inject.Container.resolve declared in com.example.droid_inject.Container' type=kotlin.Any origin=null
                      <T>: kotlin.Any
                      $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:INSTANCE type:com.example.droid_inject.Container visibility:public [final,static] declared in com.example.droid_inject.Container' type=com.example.droid_inject.Container origin=null
                      clazz: BLOCK type=kotlin.reflect.KClass<out kotlin.Any> origin=null
                        CALL 'public final fun checkNotNull (object: kotlin.Any?, message: kotlin.String): kotlin.Unit declared in kotlin.jvm.internal.Intrinsics' type=kotlin.Unit origin=null
                          object: GET_VAR 'val kClass: kotlin.reflect.KClass<VM of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel> [val] declared in com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create' type=kotlin.reflect.KClass<VM of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel> origin=null
                          message: CONST String type=kotlin.String value="null cannot be cast to non-null type kotlin.reflect.KClass<out kotlin.Any>"
                        TYPE_OP type=kotlin.reflect.KClass<out kotlin.Any>? origin=CAST typeOperand=kotlin.reflect.KClass<out kotlin.Any>?
                          GET_VAR 'val kClass: kotlin.reflect.KClass<VM of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel> [val] declared in com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create' type=kotlin.reflect.KClass<VM of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel> origin=null
                  RETURN type=kotlin.Nothing from='public open fun create <T> (modelClass: java.lang.Class<T of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create>): T of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create declared in com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>'
                    BLOCK type=T of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create origin=FOLDED_ELVIS
                      WHEN type=T of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create origin=FOLDED_ELVIS
                        BRANCH
                          if: COMPOSITE type=kotlin.Boolean origin=null
                            VAR IR_TEMPORARY_VARIABLE name:tmp0_elvis_lhs type:@[FlexibleNullability] T of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create? [val]
                              CALL 'public open fun cast (p0: @[FlexibleNullability] kotlin.Any?): @[FlexibleNullability] T of java.lang.Class? declared in java.lang.Class' type=@[FlexibleNullability] T of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create? origin=null
                                $this: GET_VAR 'modelClass: java.lang.Class<T of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create> declared in com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create' type=java.lang.Class<T of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create> origin=null
                                p0: GET_VAR 'val viewModelInstance: kotlin.Any [val] declared in com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create' type=kotlin.Any origin=null
                            CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                              $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                                arg0: GET_VAR 'val tmp0_elvis_lhs: @[FlexibleNullability] T of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create? [val] declared in com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create' type=@[FlexibleNullability] T of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create? origin=null
                                arg1: CONST Null type=kotlin.Nothing? value=null
                          then: GET_VAR 'val tmp0_elvis_lhs: @[FlexibleNullability] T of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create? [val] declared in com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create' type=@[FlexibleNullability] T of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create? origin=null
                        BRANCH
                          if: CONST Boolean type=kotlin.Boolean value=true
                          then: THROW type=kotlin.Nothing
                            CONSTRUCTOR_CALL 'public constructor <init> (p0: @[FlexibleNullability] kotlin.String?) declared in java.lang.IllegalArgumentException' type=java.lang.IllegalArgumentException origin=null
                              p0: CONST String type=kotlin.String value="Unknown ViewModel class"
              FUN FAKE_OVERRIDE name:create visibility:public modality:OPEN <T> ($this:androidx.lifecycle.ViewModelProvider.Factory, modelClass:java.lang.Class<T of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create>, extras:androidx.lifecycle.viewmodel.CreationExtras) returnType:T of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create [fake_override]
                overridden:
                  public open fun create <T> (modelClass: java.lang.Class<T of androidx.lifecycle.ViewModelProvider.Factory.create>, extras: androidx.lifecycle.viewmodel.CreationExtras): T of androidx.lifecycle.ViewModelProvider.Factory.create declared in androidx.lifecycle.ViewModelProvider.Factory
                TYPE_PARAMETER name:T index:0 variance: superTypes:[androidx.lifecycle.ViewModel] reified:false
                $this: VALUE_PARAMETER name:<this> type:androidx.lifecycle.ViewModelProvider.Factory
                VALUE_PARAMETER name:modelClass index:0 type:java.lang.Class<T of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create>
                VALUE_PARAMETER name:extras index:1 type:androidx.lifecycle.viewmodel.CreationExtras
              FUN FAKE_OVERRIDE name:create visibility:public modality:OPEN <T> ($this:androidx.lifecycle.ViewModelProvider.Factory, modelClass:kotlin.reflect.KClass<T of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create>, extras:androidx.lifecycle.viewmodel.CreationExtras) returnType:T of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create [fake_override]
                overridden:
                  public open fun create <T> (modelClass: kotlin.reflect.KClass<T of androidx.lifecycle.ViewModelProvider.Factory.create>, extras: androidx.lifecycle.viewmodel.CreationExtras): T of androidx.lifecycle.ViewModelProvider.Factory.create declared in androidx.lifecycle.ViewModelProvider.Factory
                TYPE_PARAMETER name:T index:0 variance: superTypes:[androidx.lifecycle.ViewModel] reified:false
                $this: VALUE_PARAMETER name:<this> type:androidx.lifecycle.ViewModelProvider.Factory
                VALUE_PARAMETER name:modelClass index:0 type:kotlin.reflect.KClass<T of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>.create>
                VALUE_PARAMETER name:extras index:1 type:androidx.lifecycle.viewmodel.CreationExtras
              FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
                overridden:
                  public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in androidx.lifecycle.ViewModelProvider.Factory
                $this: VALUE_PARAMETER name:<this> type:kotlin.Any
                VALUE_PARAMETER name:other index:0 type:kotlin.Any?
              FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
                overridden:
                  public open fun hashCode (): kotlin.Int [fake_override] declared in androidx.lifecycle.ViewModelProvider.Factory
                $this: VALUE_PARAMETER name:<this> type:kotlin.Any
              FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
                overridden:
                  public open fun toString (): kotlin.String [fake_override] declared in androidx.lifecycle.ViewModelProvider.Factory
                $this: VALUE_PARAMETER name:<this> type:kotlin.Any
            BLOCK type=com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided><VM of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel> origin=null
              CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided>' type=com.example.droidinject.ViewModelInjectKt.droidInjectViewModel.<no name provided><VM of com.example.droidinject.ViewModelInjectKt.droidInjectViewModel> origin=OBJECT_LITERAL
          extras: COMPOSITE type=androidx.lifecycle.viewmodel.CreationExtras? origin=DEFAULT_VALUE
            CONST Null type=androidx.lifecycle.viewmodel.CreationExtras? value=null
          $mask0: CONST Int type=kotlin.Int value=11
          $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:40)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:412)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:423)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:168)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 43 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun viewModel$default <VM> (viewModelStoreOwner: androidx.lifecycle.ViewModelStoreOwner?, key: kotlin.String?, factory: androidx.lifecycle.ViewModelProvider.Factory?, extras: androidx.lifecycle.viewmodel.CreationExtras?, $mask0: kotlin.Int, $handler: kotlin.Any?): VM of androidx.lifecycle.viewmodel.compose.ViewModelKt.viewModel$default [inline] declared in androidx.lifecycle.viewmodel.compose.ViewModelKt' type=VM of androidx.lifecycle.viewmodel.compose.ViewModelKt.viewModel$default origin=DEFAULT_DISPATCH_CALL
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:163)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:653)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitTypeOperator(ExpressionCodegen.kt:1127)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitTypeOperator(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrTypeOperatorCall.accept(IrTypeOperatorCall.kt:26)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitReturn(ExpressionCodegen.kt:1051)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitReturn(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrReturn.accept(IrReturn.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:579)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:584)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:240)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:123)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:44)
	... 53 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/lifecycle/viewmodel/compose/ViewModelKt__ViewModelKt;.viewModel$default(Landroidx/lifecycle/ViewModelStoreOwner;Ljava/lang/String;Landroidx/lifecycle/ViewModelProvider$Factory;Landroidx/lifecycle/viewmodel/CreationExtras;ILjava/lang/Object;)Landroidx/lifecycle/ViewModel;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 71 more


